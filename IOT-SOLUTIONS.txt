IOT SOLUTIONS:
////////

QUE1:

#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "NUC1xx-LB_002\Seven_Segment.h"
#include "DrvADC.h"
#include "NUC1xx-LB_002\LCD_Driver.h"
int32_t main (void)
{  
  uint16_t value;  
  char TEXT[16];			  
	UNLOCKREG();
	SYSCLK->PWRCON.XTL12M_EN = 1; 	//Enable 12Mhz and set HCLK->12Mhz
	SYSCLK->CLKSEL0.HCLK_S = 0;
	LOCKREG();
	Initial_panel();  // initialize LCD pannel
  clr_all_panel();  // clear LCD panel 
  print_lcd(0,"variable reistor");
	DrvADC_Open(ADC_SINGLE_END,ADC_SINGLE_OP , 0x40,INTERNAL_HCLK , 1); 	
	while(1)
  {
    DrvADC_StartConvert();   // start A/D conversion
    while(DrvADC_IsConversionDone()==FALSE);
    value = ADC->ADDR[6].RSLT & 0xFFF;    
    sprintf(TEXT,"Value: %d",value); // convert ADC0 value into text
    print_lcd(1, TEXT); // output TEXT to LCD 
  }
}	



------------------------------------------------------------------------------------------------------------------------------------------

QUE2

#include <stdio.h>
#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "Driver\DrvGPIO.h"
#include "Driver\DrvADC.h"

void EINT1Callback() 
{
    DrvGPIO_ClrBit(E_GPC, 12);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 12);
    DrvSYS_Delay(5000);
	/*
    DrvGPIO_ClrBit(E_GPC, 13);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 13);
    DrvSYS_Delay(5000);
    DrvGPIO_ClrBit(E_GPC, 14);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 14);
    DrvSYS_Delay(5000);
    DrvGPIO_ClrBit(E_GPC, 15);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 15);
   DrvSYS_Delay(5000);
	*/
}

void Init_LED() {
    DrvGPIO_Open(E_GPC, 12, E_IO_OUTPUT);
    DrvGPIO_Open(E_GPC, 13, E_IO_OUTPUT);
    DrvGPIO_Open(E_GPC, 14, E_IO_OUTPUT);
    DrvGPIO_Open(E_GPC, 15, E_IO_OUTPUT);
    DrvGPIO_SetBit(E_GPC, 12);
    DrvGPIO_SetBit(E_GPC, 13);
    DrvGPIO_SetBit(E_GPC, 14);
    DrvGPIO_SetBit(E_GPC, 15);
}

int main (void)
{
    UNLOCKREG();
    DrvSYS_Open(48000000);
    LOCKREG();
    Init_LED();
    DrvGPIO_Open(E_GPB, 15, E_IO_INPUT);
    DrvGPIO_EnableEINT1(E_IO_BOTH_EDGE,E_MODE_EDGE,EINT1Callback);
    while(1)
    {
    }
}
-------------------------------------------------------------------------------------------------
Que3

#include <stdio.h>
#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "Driver\DrvGPIO.h"
#include "Driver\DrvADC.h"

void EINT1Callback() 
{
    DrvGPIO_ClrBit(E_GPA, 12);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPA, 12);
    DrvSYS_Delay(5000);
	/*
    DrvGPIO_ClrBit(E_GPC, 13);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 13);
    DrvSYS_Delay(5000);
    DrvGPIO_ClrBit(E_GPC, 14);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 14);
    DrvSYS_Delay(5000);
    DrvGPIO_ClrBit(E_GPC, 15);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 15);
   DrvSYS_Delay(5000);
	*/
}

void Init_LED() {
    DrvGPIO_Open(E_GPA, 12, E_IO_OUTPUT);
   // DrvGPIO_Open(E_GPC, 13, E_IO_OUTPUT);
  //  DrvGPIO_Open(E_GPC, 14, E_IO_OUTPUT);
  //  DrvGPIO_Open(E_GPC, 15, E_IO_OUTPUT);
    DrvGPIO_SetBit(E_GPA, 12);
  //  DrvGPIO_SetBit(E_GPC, 13);
   // DrvGPIO_SetBit(E_GPC, 14);
   // DrvGPIO_SetBit(E_GPC, 15);
}

int main (void)
{
    UNLOCKREG();
    DrvSYS_Open(48000000);
    LOCKREG();
    Init_LED();
    DrvGPIO_Open(E_GPB, 15, E_IO_INPUT);
    DrvGPIO_EnableEINT1(E_IO_BOTH_EDGE,E_MODE_EDGE,EINT1Callback);
    while(1)
    {
    }
}
=--------------------------------------------------------------------------------------
Que4


#include <stdio.h>
#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "Driver\DrvGPIO.h"
#include "Driver\DrvADC.h"

void EINT1Callback() 
{
    DrvGPIO_ClrBit(E_GPB, 11);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPB, 11);
    DrvSYS_Delay(5000);
	/*
    DrvGPIO_ClrBit(E_GPC, 13);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 13);
    DrvSYS_Delay(5000);
    DrvGPIO_ClrBit(E_GPC, 14);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 14);
    DrvSYS_Delay(5000);
    DrvGPIO_ClrBit(E_GPC, 15);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 15);
   DrvSYS_Delay(5000);
	*/
}

void EINT0Callback() 
{
	   DrvGPIO_ClrBit(E_GPA, 12);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPA, 12);
    DrvSYS_Delay(5000);
}

void Init_LED() {
    DrvGPIO_Open(E_GPA, 12, E_IO_OUTPUT);
	
    DrvGPIO_Open(E_GPB, 11, E_IO_OUTPUT);
  //  DrvGPIO_Open(E_GPC, 14, E_IO_OUTPUT);
  //  DrvGPIO_Open(E_GPC, 15, E_IO_OUTPUT);
    DrvGPIO_SetBit(E_GPA, 12);
   DrvGPIO_SetBit(E_GPB, 11);
   // DrvGPIO_SetBit(E_GPC, 14);
   // DrvGPIO_SetBit(E_GPC, 15);
}

int main (void)
{
    UNLOCKREG();
    DrvSYS_Open(48000000);
    LOCKREG();
    Init_LED();
    DrvGPIO_Open(E_GPB, 15, E_IO_INPUT);
	  DrvGPIO_Open(E_GPB, 14, E_IO_INPUT);
    DrvGPIO_EnableEINT0(E_IO_BOTH_EDGE,E_MODE_EDGE,EINT1Callback);
	  DrvGPIO_EnableEINT1(E_IO_BOTH_EDGE,E_MODE_EDGE,EINT0Callback);
    while(1)
    {
    }
}

-------------------------------------------------------------------------------------------

Que5

#include <stdio.h>
#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "Driver\DrvGPIO.h"
#include "Driver\DrvADC.h"
#include "NUC1xx-LB_002\LCD_Driver.h"
#include "NUC1xx-LB_002\Seven_Segment.h"
void EINT1Callback() 
{
	  
	Initial_panel();  // initialize LCD pannel
  clr_all_panel();  // clear LCD panel 
  print_lcd(0,"variabl");
   // DrvGPIO_ClrBit(E_GPA, 12);
   // DrvSYS_Delay(5000);
   // DrvGPIO_SetBit(E_GPA, 12);
   // DrvSYS_Delay(5000);
	/*
    DrvGPIO_ClrBit(E_GPC, 13);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 13);
    DrvSYS_Delay(5000);
    DrvGPIO_ClrBit(E_GPC, 14);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 14);
    DrvSYS_Delay(5000);
    DrvGPIO_ClrBit(E_GPC, 15);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 15);
   DrvSYS_Delay(5000);
	*/
}

void Init_LED() {
    DrvGPIO_Open(E_GPA, 12, E_IO_OUTPUT);
   // DrvGPIO_Open(E_GPC, 13, E_IO_OUTPUT);
  //  DrvGPIO_Open(E_GPC, 14, E_IO_OUTPUT);
  //  DrvGPIO_Open(E_GPC, 15, E_IO_OUTPUT);
    DrvGPIO_SetBit(E_GPA, 12);
  //  DrvGPIO_SetBit(E_GPC, 13);
   // DrvGPIO_SetBit(E_GPC, 14);
   // DrvGPIO_SetBit(E_GPC, 15);
}

int main (void)
{
    UNLOCKREG();
    DrvSYS_Open(48000000);
    LOCKREG();
   // Init_LED();
    DrvGPIO_Open(E_GPB, 15, E_IO_INPUT);
    DrvGPIO_EnableEINT1(E_IO_BOTH_EDGE,E_MODE_EDGE,EINT1Callback);
    while(1)
    {
    }
}
----------------------------------------------------------------------------------
Que6

#include <stdio.h>																											 
#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "Seven_Segment.h"
#include "DrvGPIO.h"
#include "DrvSYS.h"

void seg_display(int16_t value)
{
    int8_t digit;
	digit = value / 1000;
	close_seven_segment();
	show_seven_segment(3,digit);
	DrvSYS_Delay(5000);
			
	value = value - digit * 1000;
	digit = value / 100;
	close_seven_segment();
	show_seven_segment(2,digit);
	DrvSYS_Delay(5000);

	value = value - digit * 100;
	digit = value / 10;
	close_seven_segment();
	show_seven_segment(1,digit);
	DrvSYS_Delay(5000);

	value = value - digit * 10;
	digit = value;
	close_seven_segment();
	show_seven_segment(0,digit);
	DrvSYS_Delay(5000);
}

int32_t main (void)
{
	char TEXT1[16];
	int val;
	val=0000;
	UNLOCKREG();
	DrvSYS_Open(48000000);
	LOCKREG();			 	
 	while(val<=2500) 
	{	
        DrvSYS_Delay(500);	 
	    
	    seg_display(val);	
val=val++ ;		
	}
}
--------------------------------------------------------------------------------------------
Que8

#include <stdio.h>
#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "Driver\DrvGPIO.h"
#include "Driver\DrvADC.h"

void EINT1Callback() 
{
    DrvGPIO_ClrBit(E_GPC, 12);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 12);
    DrvSYS_Delay(5000);
	/*
    DrvGPIO_ClrBit(E_GPC, 13);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 13);
    DrvSYS_Delay(5000);
    DrvGPIO_ClrBit(E_GPC, 14);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 14);
    DrvSYS_Delay(5000);
    DrvGPIO_ClrBit(E_GPC, 15);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPC, 15);
   DrvSYS_Delay(5000);
	*/
}

void EINT0Callback() 
{
	   DrvGPIO_ClrBit(E_GPA, 12);
    DrvSYS_Delay(5000);
    DrvGPIO_SetBit(E_GPA, 12);
    DrvSYS_Delay(5000);
}

void Init_LED() {
    DrvGPIO_Open(E_GPA, 12, E_IO_OUTPUT);
	
   // DrvGPIO_Open(E_GPB, 11, E_IO_OUTPUT);
  //  DrvGPIO_Open(E_GPC, 14, E_IO_OUTPUT);
   DrvGPIO_Open(E_GPC, 12, E_IO_OUTPUT);
    DrvGPIO_SetBit(E_GPA, 12);
   //DrvGPIO_SetBit(E_GPB, 11);
   DrvGPIO_SetBit(E_GPC, 12);
   // DrvGPIO_SetBit(E_GPC, 15);
}

int main (void)
{
    UNLOCKREG();
    DrvSYS_Open(48000000);
    LOCKREG();
    Init_LED();
    DrvGPIO_Open(E_GPB, 15, E_IO_INPUT);
	  //DrvGPIO_Open(E_GPA, 15, E_IO_INPUT);
    DrvGPIO_EnableEINT1(E_IO_BOTH_EDGE,E_MODE_EDGE,EINT1Callback);
	  DrvGPIO_EnableEINT0(E_IO_BOTH_EDGE,E_MODE_EDGE,EINT0Callback);
    while(1)
    {
    }
}

--------------------------------------------------------------------------------------------

Que 9:: (  NOT CORRECT)
#include <stdio.h>
#include "NUC1xx.h"
#include "Driver\DrvUART.h"
#include "Driver\DrvGPIO.h"
#include "Driver\DrvSYS.h"
#include "LCD_Driver.h"

volatile uint32_t irqA_counter = 0;
volatile uint32_t irqE_counter = 0;

void GPIOAB_INT_CallBack(uint32_t GPA_IntStatus, uint32_t GPB_IntStatus)
{
    if ((GPA_IntStatus>>15) & 0x01) irqA_counter++;
    print_lcd(3,"GPA interrupt !!");
}

void GPIOCDE_INT_CallBack(uint32_t GPC_IntStatus, uint32_t GPD_IntStatus, uint32_t GPE_IntStatus)
{
    if ((GPC_IntStatus>>10) & 0x01) irqE_counter++;
    print_lcd(3,"GPC interrupt !!");
    UNLOCKREG();
    DrvSYS_Open(48000000);
    LOCKREG();
    DrvGPIO_Open(E_GPB, 11, E_IO_OUTPUT);
    DrvGPIO_ClrBit(E_GPB,11);
    DrvSYS_Delay(100000);
    DrvGPIO_SetBit(E_GPB,11);
    DrvSYS_Delay(100000);
}

int32_t main()
{
    char TEXT[16];
    UNLOCKREG();
    SYSCLK->PWRCON.XTL12M_EN=1;
    DrvSYS_Delay(5000); // Waiting for 12M Xtal stalble
    SYSCLK->CLKSEL0.HCLK_S=0;
    LOCKREG();
    DrvGPIO_Open(E_GPA,15,E_IO_INPUT);
    DrvGPIO_Open(E_GPE,10,E_IO_INPUT);
    DrvGPIO_EnableInt(E_GPA, 15, E_IO_RISING, E_MODE_EDGE);
    DrvGPIO_EnableInt(E_GPE, 10, E_IO_RISING, E_MODE_EDGE);
    DrvGPIO_SetDebounceTime(5, 1);
    DrvGPIO_EnableDebounce(E_GPA, 15);
    DrvGPIO_EnableDebounce(E_GPE, 10);
    DrvGPIO_SetIntCallback(GPIOAB_INT_CallBack, GPIOCDE_INT_CallBack);
    Initial_panel();
    clr_all_panel();
    print_lcd(0,"Smpl_GPIO_Intr");
    while(1)
    {   
        sprintf(TEXT,"IRQ_A: %d",irqA_counter);
        print_lcd(1, TEXT);
        sprintf(TEXT,"IRQ_E: %d",irqE_counter);
        print_lcd(2, TEXT);
    }
}
-------------------------------------------------------------------------------------

Que10

#include <stdio.h>
#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "Driver\DrvGPIO.h"
#include "NUC1xx-LB_002\LCD_Driver.h"

int main (void)
{
    int32_t number;
    char TEXT0[16]="SmplKeypad";
    char TEXT1[16];
    UNLOCKREG(); // unlock register for programming
    DrvSYS_Open(48000000);// set System Clock to run at 48MHz
    // 12MHz crystal input, PLL output 48MHz
    LOCKREG(); // lock register from programming
    Initial_panel();
    clr_all_panel();
    print_lcd(0,TEXT0); // print title
    while (1) // forever loop to keep flashing four LEDs one at a time
    {
        number=DrvGPIO_GetPortBits(E_GPA);
        sprintf(TEXT1,"%x",number); // print scankey input to string
        print_lcd(1,TEXT1);
        if(number==0xfffe)
            print_lcd(2,"A0");
        else if(number==0xfffd)
            print_lcd(2,"A1");
        else if(number==0xfffb)
            print_lcd(2,"A2");
        else if(number==0xfff7)
            print_lcd(2,"A3");
    }
}
-----------------------------------------------------------------------------------------

Que 11:

#include <stdio.h>
#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "DrvPWM.h"
#include "DrvADC.h"
#include "LCD_Driver.h"

int32_t main (void)
{
    //char value[15];
    int16_t x=0xffff;
    UNLOCKREG();
    SYSCLK->PWRCON.XTL12M_EN = 1; //Enable 12Mhz and set HCLK->12Mhz
    SYSCLK->CLKSEL0.HCLK_S = 0;
    LOCKREG();
    InitPWM();
    Initial_panel(); // initialize LCD pannel
    clr_all_panel(); // clear LCD panel
    print_lcd(0,"variable reistor");
    while(1)
    {
PWMA->CMR0=x;
        x = x - 1;
        DrvSYS_Delay(500);
        //sprintf(value,"%d",ADC->ADDR[0].RSLT);
        // print_lcd(1,"value");
    }
}

----------------------------------------------------------------------------------------------

Que12::

#include <stdio.h>
#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "Driver\DrvGPIO.h"
#include "NUC1xx-LB_002\LCD_Driver.h"

int main (void)
{
    int32_t number;
    char TEXT0[16]="SmplKeypad";
    char TEXT1[16];
    UNLOCKREG();
    DrvSYS_Open(48000000);
    LOCKREG();
    Initial_panel();
    clr_all_panel();
    print_lcd(0,TEXT0);
    while (1)
    {
        number=DrvGPIO_GetPortBits(E_GPA);
        sprintf(TEXT1,"%x",number);
        print_lcd(1,TEXT1);
        if(number==0xfffe)
            print_lcd(2,"A0 grounded");
        else if(number==0xffff)
            print_lcd(2,"not grounded"); // grounded ?
    }
}

---------------------------------------------------------THE END----------------------------------------------------------------



